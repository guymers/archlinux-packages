diff --git a/src/main/java/com/google/devtools/build/lib/bazel/repository/HttpDownloader.java b/src/main/java/com/google/devtools/build/lib/bazel/repository/HttpDownloader.java
index f6bf028..c55fd8c 100644
--- a/src/main/java/com/google/devtools/build/lib/bazel/repository/HttpDownloader.java
+++ b/src/main/java/com/google/devtools/build/lib/bazel/repository/HttpDownloader.java
@@ -259,16 +259,18 @@ public class HttpDownloader {
 
     // Here there be dragons.
     Pattern urlPattern =
-        Pattern.compile("^(https?)://(?:([^:@]+?)(?::([^@]+?))?@)?(?:[^:]+)(?::(\\d+))?$");
+        Pattern.compile("^(https?)://(([^:@]+?)(?::([^@]+?))?@)?([^:]+)(?::(\\d+))?$");
     Matcher matcher = urlPattern.matcher(proxyAddress);
     if (!matcher.matches()) {
       throw new IOException("Proxy address " + proxyAddress + " is not a valid URL");
     }
 
-    String protocol = matcher.group(1);
-    final String username = matcher.group(2);
-    final String password = matcher.group(3);
-    String port = matcher.group(4);
+    final String protocol = matcher.group(1);
+    final String idAndPassword = matcher.group(2);
+    final String username = matcher.group(3);
+    final String password = matcher.group(4);
+    final String hostname = matcher.group(5);
+    final String portRaw = matcher.group(6);
 
     boolean https;
     switch (protocol) {
@@ -282,6 +284,22 @@ public class HttpDownloader {
         throw new IOException("Invalid proxy protocol for " + proxyAddress);
     }
 
+    int port = https ? 443 : 80; // Default port numbers
+
+    if (portRaw != null) {
+      try {
+        port = Integer.parseInt(portRaw);
+      } catch (NumberFormatException e) {
+        throw new IOException("Error parsing proxy port: " + proxyAddress);
+      }
+    }
+
+    // We need to set both of these because jgit uses whichever the resource dictates
+    System.setProperty("https.proxyHost", hostname);
+    System.setProperty("https.proxyPort", Integer.toString(port));
+    System.setProperty("http.proxyHost", hostname);
+    System.setProperty("http.proxyPort", Integer.toString(port));
+
     if (username != null) {
       if (password == null) {
         throw new IOException("No password given for proxy " + proxyAddress);
@@ -298,18 +316,7 @@ public class HttpDownloader {
           });
     }
 
-    if (port == null) {
-      return new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxyAddress, https ? 443 : 80));
-    }
-
-    try {
-      return new Proxy(
-          Proxy.Type.HTTP,
-          new InetSocketAddress(
-              proxyAddress.substring(0, proxyAddress.lastIndexOf(':')), Integer.parseInt(port)));
-    } catch (NumberFormatException e) {
-      throw new IOException("Error parsing proxy port: " + proxyAddress);
-    }
+    return new Proxy(Proxy.Type.HTTP, new InetSocketAddress(hostname, port));
   }
 
   public static String getHash(Hasher hasher, Path path) throws IOException {
